# src/paths.pyfrom __future__ import annotationsimport osfrom pathlib import Pathimport datetime as dtdef project_root() -> Path:    """    Racine du projet. Si la variable d'env ANOMALY_PROJECT_ROOT est définie,    on l'utilise. Sinon, on part du dossier contenant ce fichier.    """    env = os.getenv("ANOMALY_PROJECT_ROOT")    if env:        return Path(env).expanduser().resolve()    # si exécuté depuis Spyder, __file__ existe; en console pure, fallback CWD    here = Path(__file__).parent if "__file__" in globals() else Path.cwd()    return (here / "..").resolve()def exports_dir() -> Path:    """    Dossier 'exports' à la racine du projet.    """    d = project_root() / "exports"    d.mkdir(parents=True, exist_ok=True)    return ddef run_dir(prefix: str = "run") -> Path:    """    Sous-dossier horodaté pour un run: exports/run_YYYY-MM-DD_HH-MM-SS    """    stamp = dt.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")    d = exports_dir() / f"{prefix}_{stamp}"    d.mkdir(parents=True, exist_ok=True)    return d